{"version":3,"sources":["api.ts","components/TodoList/TodoList.tsx","components/CurrentUser/CurrentUser.tsx","App.tsx","index.tsx"],"names":["url","getTodos","a","fetch","response","json","getUsers","userId","TodoList","state","searchTitle","selectTodo","todos","handleSearchTitle","event","setState","target","value","handleSearchStatus","copyTodos","filter","todo","title","toLowerCase","includes","completed","changeStatus","newTodoStatus","map","id","this","selectedUser","props","getSelectedTodos","className","htmlFor","type","placeholder","onChange","name","classNames","checked","onClick","React","Component","CurrentUser","user","loadUserInfo","prevProps","removeUserInfo","email","phone","App","selectedUserId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.09a08697.chunk.js","sourcesContent":["const url = 'https://mate.academy/students-api';\n\nexport async function getTodos(): Promise<Todo[]> {\n  const response = await fetch(`${url}/todos`);\n\n  return response.json();\n}\n\nexport async function getUsers(userId: number): Promise<User> {\n  const response = await fetch(`${url}/users/${userId}`);\n\n  return response.json();\n}\n","import React from 'react';\nimport './TodoList.scss';\nimport classNames from 'classnames';\nimport { getTodos } from '../../api';\n\ntype State = {\n  searchTitle: string,\n  selectTodo: string,\n  todos: Todo[],\n};\n\ntype Props = {\n  selectedUser: (userId: number) => void,\n};\n\nexport class TodoList extends React.Component<Props, State> {\n  state: State = {\n    searchTitle: '',\n    selectTodo: '',\n    todos: [],\n  };\n\n  async componentDidMount() {\n    const todos = await getTodos();\n\n    this.setState({\n      todos: [...todos],\n    });\n  }\n\n  handleSearchTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({\n      searchTitle: event.target.value,\n    });\n  };\n\n  handleSearchStatus = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    this.setState({\n      selectTodo: event.target.value,\n    });\n  };\n\n  getTodos = () => {\n    const { searchTitle, selectTodo, todos } = this.state;\n\n    const copyTodos = todos.filter(todo => todo.title.toLowerCase()\n      .includes(searchTitle.toLowerCase()));\n\n    if (selectTodo === 'active') {\n      return copyTodos.filter(todo => !todo.completed);\n    }\n\n    if (selectTodo === 'completed') {\n      return copyTodos.filter(todo => todo.completed);\n    }\n\n    return copyTodos;\n  };\n\n  changeStatus = (userId: number) => {\n    const { todos } = this.state;\n\n    const newTodoStatus = todos.map(todo => {\n      if (todo.id === userId) {\n        return { ...todo, completed: !todo.completed };\n      }\n\n      return todo;\n    });\n\n    this.setState({\n      todos: newTodoStatus,\n    });\n  };\n\n  render() {\n    const { searchTitle, selectTodo } = this.state;\n    const { selectedUser } = this.props;\n\n    const getSelectedTodos = this.getTodos();\n\n    return (\n      <div className=\"TodoList\">\n        <h2>Todos:</h2>\n        <div className=\"TodoList__search\">\n          <label htmlFor=\"search-query\" className=\"label\">\n            Search todo\n            <div className=\"control\">\n              <input\n                type=\"text\"\n                id=\"search-query\"\n                className=\"TodoList__item\"\n                placeholder=\"Type search todo\"\n                value={searchTitle}\n                onChange={this.handleSearchTitle}\n              />\n            </div>\n          </label>\n        </div>\n\n        <div className=\"select\">\n          <select\n            name=\"selectTodo\"\n            value={selectTodo}\n            onChange={this.handleSearchStatus}\n            className=\"TodoList__item\"\n          >\n            <option value=\"all\">Show all</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </div>\n\n        <div className=\"TodoList__list-container\">\n          <ul className=\"TodoList__list\">\n            {getSelectedTodos.map(todo => (\n              <li\n                className={classNames('TodoList__item',\n                  { 'TodoList__item--unchecked': !todo.completed },\n                  { 'TodoList__item--checked': todo.completed })}\n                key={todo.id}\n              >\n                <label htmlFor=\"search-query\">\n                  <input\n                    type=\"checkbox\"\n                    checked={todo.completed}\n                    onChange={() => this.changeStatus(todo.id)}\n                  />\n                  <p>{todo.title}</p>\n                </label>\n\n                <button\n                  className=\"\n                    TodoList__user-button\n                    TodoList__user-button--selected\n                    button\n                  \"\n                  type=\"button\"\n                  onClick={() => selectedUser(+todo.userId)}\n                >\n                  User #\n                  {todo.userId}\n                </button>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './CurrentUser.scss';\n\nimport { getUsers } from '../../api';\n\ntype Props = {\n  userId: number,\n  removeUserInfo: () => void,\n};\n\ntype State = {\n  user: User | null,\n};\n\nexport class CurrentUser extends React.Component<Props, State> {\n  state: State = {\n    user: null,\n  };\n\n  async componentDidMount() {\n    this.loadUserInfo();\n  }\n\n  async componentDidUpdate(prevProps: Props) {\n    if (prevProps.userId !== this.props.userId) {\n      this.loadUserInfo();\n    }\n  }\n\n  async loadUserInfo() {\n    const { userId } = this.props;\n    const user = await getUsers(userId);\n\n    this.setState({\n      user,\n    });\n  }\n\n  render() {\n    const { user } = this.state;\n    const { removeUserInfo } = this.props;\n\n    return (\n      <div>\n        {user ? (\n          <div className=\"CurrentUser\">\n            <h2 className=\"CurrentUser__title\">\n              <span>\n                Selected user:\n                {user.id}\n              </span>\n            </h2>\n\n            <h3 className=\"CurrentUser__name\">{user.name}</h3>\n            <p className=\"CurrentUser__email\">{user.email}</p>\n            <p className=\"CurrentUser__phone\">{user.phone}</p>\n\n            <button\n              type=\"button\"\n              className=\"button\"\n              onClick={removeUserInfo}\n            >\n              Remove\n            </button>\n          </div>\n        )\n          : <p>User is not found</p>}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\n\ntype State = {\n  selectedUserId: number,\n};\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    selectedUserId: 0,\n  };\n\n  selectedUser = (selectedUserId: number) => {\n    this.setState({\n      selectedUserId,\n    });\n  };\n\n  removeUserInfo = () => {\n    this.setState({ selectedUserId: 0 });\n  };\n\n  render() {\n    const { selectedUserId } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <TodoList\n            selectedUser={this.selectedUser}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser\n                userId={selectedUserId}\n                removeUserInfo={this.removeUserInfo}\n              />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}